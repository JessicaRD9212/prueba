name: CI/CD - Build and Upload WAR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: mi-aplicacion-web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build WAR with Maven
        run: mvn -B clean package -DskipTests=true

      - name: Get WAR name
        id: get-war-name
        run: |
          war=$(ls target/*.war | head -n 1)
          echo "WAR encontrado: $war"
          war_name=$(basename "$war")
          echo "war_name=$war_name" >> $GITHUB_OUTPUT

      - name: Upload WAR Artifact
        uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: ${{ env.PROJECT_NAME }}-war
          path: target/*.war
          retention-days: 7

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download built WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: mi-aplicacion-web-war
          path: ./artifact

      - name: Configure SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Upload WAR to EC2 (home directory)
        run: |
          echo "Subiendo WAR al servidor..."
          scp -o StrictHostKeyChecking=no -i private_key.pem ./artifact/*.war \
            ${{ secrets.TOMCAT_USUARIO }}@${{ secrets.TOMCAT_HOST }}:/home/${{ secrets.TOMCAT_USUARIO }}/

      - name: Deploy WAR into Tomcat
        run: |
          echo "Desplegando WAR en Tomcat..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.TOMCAT_USUARIO }}@${{ secrets.TOMCAT_HOST }} << 'EOF'
            sudo systemctl stop tomcat
            sudo rm -rf /opt/tomcat/webapps/hellotomcat /opt/tomcat/webapps/hellotomcat.war
            sudo mv /home/ec2-user/*.war /opt/tomcat/webapps/hellotomcat.war
            sudo chown tomcat:tomcat /opt/tomcat/webapps/hellotomcat.war
            sudo systemctl start tomcat
            sleep 5
            sudo systemctl status tomcat --no-pager
          EOF
